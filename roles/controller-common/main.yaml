
  - name: Add the hosts mapping /etc/hosts
    blockinfile:
      path: /etc/hosts
      marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK -->"
      block: |
        {{ ipaddress01 }}         {{ domain01 }}         {{ hostname01 }}
        {{ ipaddress02 }}         {{ domain02 }}         {{ hostname02 }}
  - name: empty the file /etc/hostname
    shell: "> /etc/hostname"
  - name: Add the hostname /etc/hostnamae
    lineinfile:
      path: /etc/hostname
      line: '{{ hostname01 }}'
      backup: yes
  - name: permanent the hostname
    shell: hostname '{{ hostname01 }}'
  - name: check the FQDN value
    shell: hostname --fqdn
    register: result
  - debug:
      var: result.stdout
  - name: Disable and stop the firewalld service
    service:
      name: firewalld
      state: stopped
      enabled: no
  - name: Disable and stop the NetworkManager service
    service:
      name: NetworkManager
      state: stopped
      enabled: no
  - name: Disable the SELINUX
    lineinfile:
      path: /etc/selinux/config
      regexp: '^SELINUX='
      line: 'SELINUX=disabled'
      backup: yes
  - name: Update the kernel
    yum:
      name: "*"
      state: latest
  - name: restart system to reboot to newest kernel
    shell: "sleep 5 && reboot"
    async: 1
    poll: 0
  - name: wait for 10 seconds
    pause:
      seconds: 10
  - name: waiting 30 secs for server to come back
    local_action: wait_for host={{ ansible_default_ipv4.address }} port=22 state=started delay=30 timeout=60
    become: false
    register: result
  - debug:
      var: result
  - name: wait for the system to reboot
    wait_for_connection:
      connect_timeout: 20
      sleep: 5
      delay: 5
      timeout: 60
  - name: check the ping pong
    ping:
  - name: set timezone to Asia/Kolkata
    shell: timedatectl set-timezone Asia/Kolkata
  - name: Restart service chronyd, in all cases
    service:
      name: chronyd
      state: restarted
  - name: Verify the Chrony service is active
    shell: systemctl status chronyd.service
    register: result
  - debug:
      var: result.stdout_lines[0],result.stdout_lines[2]
  - name: verify the chrony servers syncing or not
    shell: chronyc sources
    register: result
  - debug:
      var: result.stdout_lines
  - name: Verify the timezone
    shell: timedatectl
    register: result
  - debug:
      var: result.stdout_lines[3]
  - name: verify the time
    shell: date
    register: result
  - debug:
      var: result.stdout_lines
  - name: Enable the OpenStack Repository
    yum:
      name:
        - centos-release-openstack-queens
        - epel-release
      state: present
  - name: Update the kernel
    yum:
      name: "*"
      state: latest
  - name: Clean all
    shell: yum clean all
  - name: Install delta RPM
    yum:
      name: deltarpm.x86_64
      state: present
  - name: Install the OpenStack client and openstack-selinux package to automatically manage security policies for OpenStack services
    yum:
      name:
        - python-openstackclient
        - openstack-selinux
  - name: Install the OpenvSwitch
    yum:
      name: openstack-neutron-openvswitch
      state: present
  - name: Enable and start the openvswitch service
    service:
      name: openvswitch
      state: started
      enabled: yes
  - name: Verify the openvswitch service is active
    shell: systemctl status openvswitch.service
    register: result
  - debug:
      var: result.stdout_lines[0],result.stdout_lines[2]
  - name: Configure the ifcfg-ens33
    template:
      src: ifcfg-ens33.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-ens33
      backup: yes
  - name: Configure the br-ex
    template:
      src: ifcfg-br-ex.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-br-ex
      backup: yes
  - name: Tell the kernel we'll be using IP's that are not defined in the interfaces file
    blockinfile:
      path: /etc/sysctl.conf
      marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK -->"
      insertafter: "# For more information, see sysctl.conf(5) and sysctl.d(5)."
      content: |
        net.ipv4.ip_forward=1
        net.ipv4.conf.all.rp_filter=0
        net.ipv4.conf.default.rp_filter=0
  - name: check the sysctl process
    command: sysctl -p
    register: result
  - debug:
      var: result
  - name: Create the ovs-bridge
    shell: ovs-vsctl add-br br-ex
  - name: Add the Bridge br-ex to physical interface ens33
    shell: "ovs-vsctl add-port br-ex ens33 && reboot"

